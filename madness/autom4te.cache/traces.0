m4trace:/usr/share/aclocal-1.11/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.11'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.11.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.11/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.11.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.11/as.m4:13: -1- AC_DEFUN([AM_PROG_AS], [# By default we simply use the C compiler to build assembly code.
AC_REQUIRE([AC_PROG_CC])
test "${CCAS+set}" = set || CCAS=$CC
test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
AC_ARG_VAR([CCAS],      [assembler compiler command (defaults to CC)])
AC_ARG_VAR([CCASFLAGS], [assembler compiler flags (defaults to CFLAGS)])
_AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES([CCAS])])dnl
])
m4trace:/usr/share/aclocal-1.11/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/usr/share/aclocal-1.11/cond.m4:15: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ(2.52)dnl
 ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.11/depend.m4:28: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                   [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.11/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.11/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE(dependency-tracking,
[  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/depout.m4:14: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.11/depout.m4:75: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.11/init.m4:26: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
AM_MISSING_PROG(AUTOCONF, autoconf)
AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
AM_MISSING_PROG(AUTOHEADER, autoheader)
AM_MISSING_PROG(MAKEINFO, makeinfo)
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AM_PROG_MKDIR_P])dnl
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/usr/share/aclocal-1.11/init.m4:126: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.11/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST(install_sh)])
m4trace:/usr/share/aclocal-1.11/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.11/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.11/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.11/missing.m4:24: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN([`missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.11/mkdirp.m4:11: -1- AC_DEFUN([AM_PROG_MKDIR_P], [AC_PREREQ([2.60])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
dnl while keeping a definition of mkdir_p for backward compatibility.
dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
dnl Makefile.ins that do not define MKDIR_P, so we do our own
dnl adjustment using top_builddir (which is defined more often than
dnl MKDIR_P).
AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
case $mkdir_p in
  [[\\/$]]* | ?:[[\\/]]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac
])
m4trace:/usr/share/aclocal-1.11/options.m4:13: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.11/options.m4:19: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), 1)])
m4trace:/usr/share/aclocal-1.11/options.m4:25: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.11/options.m4:31: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.11/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.11/sanity.m4:14: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT(yes)])
m4trace:/usr/share/aclocal-1.11/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules],
[  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')])
case $enable_silent_rules in
yes) AM_DEFAULT_VERBOSITY=0;;
no)  AM_DEFAULT_VERBOSITY=1;;
*)   AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.11/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.11/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.11/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.
AM_MISSING_PROG([AMTAR], [tar])
m4_if([$1], [v7],
     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of `-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:config/acx_check_compiler_flags.m4:2: -1- AC_DEFUN([ACX_CHECK_COMPILER_FLAG], [
  AC_LANG_SAVE
  
  AC_LANG([$1])
  acx_check_compiler_flags="no"
  acx_check_compiler_flags_save=$[$2]
  [$2]="$3"
  AC_MSG_CHECKING([whether $1 compiler accepts $3])
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],
    [
      acx_check_compiler_flags="yes"
      AC_MSG_RESULT([yes])
    ], [
      AC_MSG_RESULT([no])
    ])
    
  [$2]=$acx_check_compiler_flags_save
  AC_LANG_RESTORE
  
  AS_IF([test $acx_check_compiler_flags != no], [$4], [$5])
])
m4trace:config/acx_check_tls.m4:1: -1- AC_DEFUN([ACX_CHECK_TLS], [
  # Check for thread local storage support.
  # thread_local, __thread_local, __declspec(thread)
  
  AC_LANG_PUSH([C++])
  
  # Check for shared_ptr in std namespace
  AC_MSG_CHECKING([for C++ thread_local keyword])
  acx_check_tls=no
  
  # Check for the key word thread_local (C++11)
  AC_LINK_IFELSE(  
    [
      AC_LANG_PROGRAM(
        [[thread_local int i = 0;]],
        [[i = 1;]]
      )
    ],
    [acx_check_tls="thread_local"]
  )
  
  # Check for the key word __thread
  if test "$acx_check_tls" = no; then
    AC_LINK_IFELSE(
      [
        AC_LANG_PROGRAM(
          [[__thread int i = 0;]],
          [[i = 1;]]
        )
      ],
      [
        acx_check_tls="__thread"
        AC_DEFINE([thread_local],[__thread],[Define the thread_local key word.])
      ]
    )
  fi
  
   # Check for the key word __declspec(thread)
#  if test "$acx_check_tls" = no; then
#    AC_LINK_IFELSE(
#      [
#        AC_LANG_PROGRAM(
#          [[__declspec(thread) int i = 0;]],
#          [[i = 1;]]
#        )
#      ],
#      [
#        acx_check_tls="__declspec(thread)"
#        AC_DEFINE([thread_local],[__declspec(thread)],[Define the thread_local key word.])
#      ]
#    )
#  fi
  
  if test "$acx_check_tls" = no; then
    AC_DEFINE([thread_local],[],[Define the thread_local key word.])
  fi

  
  AC_MSG_RESULT([$acx_check_tls])
  
  AC_LANG_POP
])
m4trace:config/acx_check_tr1.m4:1: -1- AC_DEFUN([ACX_CHECK_SHARED_PTR], [
  AC_LANG_SAVE
  AC_LANG([C++])
  
  # Check for shared_ptr in std namespace
  AC_MSG_CHECKING([for shared_ptr])
  acx_shared_ptr=no
  
  # Check for std::shared_ptr in <memory>
  AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM(
        [[#include <memory>]],
        [[std::shared_ptr<int> p;]]
      )
    ],
    [
      AC_DEFINE([MADNESS_USE_MEMORY],[1],[define if MADNESS is using <memory>.])
      AC_DEFINE([MADNESS_HAS_STD_SHARED_PTR],[1],[define if std::shared_ptr is available.])
      acx_shared_ptr=yes
    ]
  )
  
  # Check for std::tr1::shared_ptr in <memory> unless 
  # disabled by user
  if test "$enable_cpptr1" = yes; then
    if test "$acx_shared_ptr" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <memory>]],
            [[std::tr1::shared_ptr<int> p;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_MEMORY],[1],[define if MADNESS is using <memory>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_SHARED_PTR],[1],[define if std::tr1::shared_ptr is available.])
          acx_shared_ptr=yes
        ]
      )
    fi

    # Check for std::tr1::shared_ptr in <tr1/memory>
    if test "$acx_shared_ptr" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/memory>]],
            [[std::tr1::shared_ptr<int> p;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_MEMORY],[1],[define if MADNESS is using <tr1/memory>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_SHARED_PTR],[1],[define if std::tr1::shared_ptr is available.])
          acx_shared_ptr=yes
        ]
      )
    fi
  fi
  
  # Check if we should use boost tr1 memory
  if test "$acx_with_boost$acx_shared_ptr" = yesno; then
    AC_DEFINE([MADNESS_USE_BOOST_TR1_MEMORY_HPP],[1],[define if MADNESS is using <boost/tr1/memory.hpp>.])
    AC_DEFINE([MADNESS_HAS_STD_TR1_SHARED_PTR],[1],[define if std::tr1::shared_ptr is available.])
    acx_shared_ptr=yes
  fi
  
  # post shared_ptr results
  AC_MSG_RESULT([$acx_shared_ptr])
  if test "$acx_shared_ptr" = no; then
    AC_MSG_WARN([std::shared_ptr and std::tr1::shared_ptr not found ... using default implementation])
  fi
  
  #Check for std::make_shared and std::allocate_shared
  acx_std_make_shared=no
  AC_MSG_CHECKING([for std::make_shared and std::allocate_shared])
  
  AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM(
        [[#include <memory>]],
        [[using ::std::make_shared; using ::std::allocate_shared;]]
      )
    ],
    [
      AC_DEFINE([MADNESS_HAS_STD_MAKE_SHARED],[1],
        [define if std::make_shared and std::allocate_shared are available.])
      acx_std_make_shared=yes
    ]
  )
    
  # post make_shared results
  AC_MSG_RESULT([$acx_std_make_shared])
  
  AC_LANG_RESTORE
])
m4trace:config/acx_check_tr1.m4:98: -1- AC_DEFUN([ACX_CHECK_TYPE_TRAITS], [
  AC_LANG_SAVE
  AC_LANG([C++])

  # Check for type traits in <type_traits> and std namespace
  AC_MSG_CHECKING([for type traits])
  acx_type_traits=no

  AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM(
        [[#include <type_traits>]],
        [[typedef std::is_same<int, double> sameT;]]
      )
    ],
    [
      AC_DEFINE([MADNESS_USE_TYPE_TRAITS],[1],[define if MADNESS is using <type_traits>.])
      AC_DEFINE([MADNESS_HAS_STD_TYPE_TRAITS],[1],[define if std type traits are available.])
      acx_type_traits=yes
    ]
  )

  # look in tr1 unless disabled by the user
  if test "$enable_cpptr1" = yes; then
    if test "$acx_type_traits" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <type_traits>]],
            [[typedef std::tr1::is_same<int, double> sameT;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TYPE_TRAITS],[1],[define if MADNESS is using <type_traits>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_TYPE_TRAITS],[1],[define if std::tr1 type traits are available.])
          acx_type_traits=yes
        ]
      )
    fi

    if test "$acx_type_traits" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/type_traits>]],
            [[typedef std::tr1::is_same<int, double> sameT;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_TYPE_TRAITS],[1],[define if MADNESS is using <tr1/type_traits>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_TYPE_TRAITS],[1],[define if std::tr1 type traits are available.])
          acx_type_traits=yes
        ]
      )
    fi
  fi
  
  # Check if we should use boost tr1 type_traits
  if test "$acx_with_boost$acx_type_traits" = yesno; then
    AC_DEFINE([MADNESS_USE_BOOST_TR1_TYPE_TRAITS_HPP],[1],[define if MADNESS is using <boost/tr1/type_traits.hpp>.])
    AC_DEFINE([MADNESS_HAS_STD_TR1_TYPE_TRAITS],[1],[define if std::tr1 type traits are available.])
    acx_type_traits=yes
  fi
  
  # post type traits results
  AC_MSG_RESULT([$acx_type_traits])
  if test "$acx_type_traits" = no; then
    AC_MSG_WARN([std or std::tr1 type traits not found ... using default implentation])
  fi
  
  AC_LANG_RESTORE
])
m4trace:config/acx_check_tr1.m4:171: -1- AC_DEFUN([ACX_CHECK_ARRAY], [
  AC_LANG_SAVE
  AC_LANG([C++])
  
  # Check for array in std namespace
  AC_MSG_CHECKING([for array])
  acx_array=no
  
  # Check for std::array in <array>
  AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM(
        [[#include <array>]],
        [[std::array<int,10> a;]]
      )
    ],
    [
      AC_DEFINE([MADNESS_USE_ARRAY],[1],[define if MADNESS is using <array>.])
      AC_DEFINE([MADNESS_HAS_STD_ARRAY],[1],[define if std::array is available.])
      AC_DEFINE([MADNESS_ARRAY_HAS_FILL],[1],[define if array has fill member function.])
      acx_array=yes
    ]
  )
  
  # Check for std::tr1::array in <array>
  if test "$enable_cpptr1" = yes; then
    if test "$acx_array" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <array>]],
            [[std::tr1::array<int,10> a;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_ARRAY],[1],[define if MADNESS is using <array>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_ARRAY],[1],[define if std::tr1::array is available.])

          # Check to see if array has fill function
          AC_COMPILE_IFELSE(
            [
              AC_LANG_PROGRAM(
                [[#include <array>]],
                [[std::tr1::array<int,10> a; a.fill(0);]]
              )
            ],
            [AC_DEFINE([MADNESS_ARRAY_HAS_FILL],[1],[define if array has fill member function.])]
          )
          acx_array=yes
        ]
      )
    fi

    # Check for std::tr1::array in <tr1/array>
    if test "$acx_array" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/array>]],
            [[std::tr1::array<int,10> a;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_ARRAY],[1],[define if MADNESS is using <tr1/array>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_ARRAY],[1],[define if std::tr1::array is available.])        
          # Check to see if array has fill function
          AC_COMPILE_IFELSE(
            [
              AC_LANG_PROGRAM(
                [[#include <tr1/array>]],
                [[std::tr1::array<int,10> a; a.fill(0);]]
              )
            ],
            [AC_DEFINE([MADNESS_ARRAY_HAS_FILL],[1],[define if array has fill member function.])]
          )
          acx_array=yes
        ]
      )
    fi
  fi
  
  # Check if we should use boost tr1 array
  if test "$acx_with_boost$acx_array" = yesno; then
    AC_DEFINE([MADNESS_USE_BOOST_TR1_ARRAY_HPP],[1],[define if MADNESS is using <boost/tr1/array.hpp>.])
    AC_DEFINE([MADNESS_HAS_STD_TR1_ARRAY],[1],[define if std::tr1::array is available.])
    # Check to see if array has fill function
    AC_COMPILE_IFELSE(
      [
        AC_LANG_PROGRAM(
          [[#include <tr1/array>]],
          [[std::tr1::array<int,10> a; a.fill(0);]]
        )
      ],
      [AC_DEFINE([MADNESS_ARRAY_HAS_FILL],[1],[define if array has fill member function.])]
    )
    acx_array=yes
  fi
  
  # post array results
  AC_MSG_RESULT([$acx_array])
  if test "$acx_array" = no; then
    AC_MSG_WARN([std::array or std::tr1::array not supported ... using default implementation])
  fi

  AC_LANG_RESTORE
])
m4trace:config/acx_check_tr1.m4:278: -1- AC_DEFUN([ACX_CHECK_HASH], [
  AC_LANG_SAVE
  AC_LANG([C++])
  
  # Check for hash in std namespace
  AC_MSG_CHECKING([for hash])
  acx_hash=no
  
  # Check for std::hash in <functional>
  AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM(
        [[#include <functional>]],
        [[std::hash<int> h; h(1);]]
      )
    ],
    [
      AC_DEFINE([MADNESS_USE_FUNCTIONAL],[1],[define if MADNESS is using <functional>.])
      AC_DEFINE([MADNESS_HAS_STD_HASH],[1],[define if std::hash is available.])
      acx_hash=yes
    ]
  )
  
  if test "$enable_cpptr1" = yes; then
    # Check for std::tr1::hash in <functional>
    if test "$acx_hash" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <functional>]],
            [[std::tr1::hash<int> h; h(1);]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_FUNCTIONAL],[1],[define if MADNESS is using <functional>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_HASH],[1],[define if std::tr1::hash is available.])
          acx_hash=yes
        ]
      )
    fi

    # Check for std::hash in <tr1/functional>
    if test "$acx_hash" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/functional>]],
            [[std::hash<int> h; h(1);]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_FUNCTIONAL],[1],[define if MADNESS is using <tr1/functional>.])
          AC_DEFINE([MADNESS_HAS_STD_HASH],[1],[define if std::tr1::hash is available.])
          acx_hash=yes
        ]
      )
    fi

    # Check for std::tr1::hash in <tr1/functional>
    if test "$acx_hash" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/functional>]],
            [[std::tr1::hash<int> h; h(1);]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_FUNCTIONAL],[1],[define if MADNESS is using <tr1/functional>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_HASH],[1],[define if std::tr1::hash is available.])        
          acx_hash=yes
        ]
      )
    fi
  fi
  
  ## Check if we should use boost tr1 hash
  #if test "$acx_with_boost$acx_hash" = yesno; then
  #  AC_DEFINE([MADNESS_USE_BOOST_TR1_FUNCTIONAL_HPP],[1],[define if MADNESS is using <boost/tr1/functional.hpp>.])
  #  AC_DEFINE([MADNESS_HAS_STD_TR1_HASH],[1],[define if std::tr1::hash is available.])
  #  acx_hash=yes
  #fi
  
  # post hash results
  #AC_MSG_RESULT([$acx_hash])
  #if test "$acx_hash" = no; then
  #  AC_MSG_ERROR([std::hash and std::tr1::hash are not supported. Reconfigure MADNESS with the --with-boost option.])
  #fi

  AC_LANG_RESTORE
])
m4trace:config/acx_check_tr1.m4:370: -1- AC_DEFUN([ACX_CHECK_RESULT_OF], [
  AC_LANG_SAVE
  AC_LANG([C++])

  # Check for results_of in <functional> and std namespace
  AC_MSG_CHECKING([for result_of])
  acx_result_of=no

  AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM(
        [[#include <functional>]],
        [[using std::result_of;]]
      )
    ],
    [
      AC_DEFINE([MADNESS_USE_FUNCTIONAL],[1],[define if MADNESS is using <functional>.])
      AC_DEFINE([MADNESS_HAS_STD_RESULT_OF],[1],[define if std::result_of are available.])
      acx_result_of=yes
    ]
  )

  if test "$enable_cpptr1" = yes; then
    if test "$acx_result_of" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <functional>]],
            [[using std::tr1::result_of;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_FUNCTIONAL],[1],[define if MADNESS is using <functional>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_RESULT_OF],[1],[define if std::tr1::result_of are available.])
          acx_result_of=yes
        ]
      )
    fi

    if test "$acx_result_of" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/functional>]],
            [[using std::result_of;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_FUNCTIONAL],[1],[define if MADNESS is using <tr1/functional>.])
          AC_DEFINE([MADNESS_HAS_STD_RESULT_OF],[1],[define if std::result_of are available.])
          acx_result_of=yes
        ]
      )
    fi

    if test "$acx_result_of" = no; then
      AC_COMPILE_IFELSE(
        [
          AC_LANG_PROGRAM(
            [[#include <tr1/functional>]],
            [[using std::tr1::result_of;]]
          )
        ],
        [
          AC_DEFINE([MADNESS_USE_TR1_FUNCTIONAL],[1],[define if MADNESS is using <tr1/functional>.])
          AC_DEFINE([MADNESS_HAS_STD_TR1_RESULT_OF],[1],[define if std::tr1::result_of are available.])
          acx_result_of=yes
        ]
      )
    fi
  fi
  
  # Check if we should use boost tr1 functional
  #if test "$acx_with_boost$acx_result_of" = yesno; then
  #  AC_DEFINE([MADNESS_USE_BOOST_TR1_FUNCTIONAL_HPP],[1],[define if MADNESS is using <boost/tr1/functional.hpp>.])
  #  AC_DEFINE([MADNESS_HAS_STD_TR1_RESULT_OF],[1],[define if std::tr1 restult_of are available.])
  #  acx_shared_ptr=yes
  #fi
  
  # post result_of results
  #AC_MSG_RESULT([$acx_result_of])
  #if test "$acx_result_of" = no; then
  #  AC_MSG_ERROR([std and std::tr1 result_of are not supported. Reconfigure MADNESS to use Boost with the --with-boost option.])
  #fi
  
  AC_LANG_RESTORE
])
m4trace:config/acx_check_tr1.m4:459: -1- AC_DEFUN([ACX_CHECK_TR1], [
  ACX_CHECK_SHARED_PTR
  ACX_CHECK_TYPE_TRAITS
  ACX_CHECK_ARRAY
#  ACX_CHECK_HASH
#  ACX_CHECK_RESULT_OF
])
m4trace:config/acx_crayxe.m4:1: -1- AC_DEFUN([ACX_CRAYXE], [
        # If on a Cray XE 
        #   - defines HAVE_CRAYXE=1 in headers 
        #   - defines HAVE_CRAYXE=yes in the script
        #   - sets MPICXX=CC and MPICC=cc if the user has not already set them
        #   - sets thread binding to "1 0 2" TODO: this has to be wrong on AMD Magny Cours
        #   - enables spinlocks
        echo "int main()"       > __crayxe.cc
        echo "{"               >> __crayxe.cc
        echo "#ifdef __CRAYXE" >> __crayxe.cc
        echo "return 0;"       >> __crayxe.cc
        echo "#else"           >> __crayxe.cc
        echo "choke me"        >> __crayxe.cc
        echo "#endif"          >> __crayxe.cc
        echo "}"               >> __crayxe.cc
        CC __crayxe.cc >& /dev/null
        if test $? = 0; then
                echo "Cray XE detected"
                HAVE_CRAYXE=yes
                AC_DEFINE(HAVE_CRAYXE,[1],[Defined if we are running on an Cray XE])
        fi
        /bin/rm __crayxe.cc
        if test "x$HAVE_CRAYXE" = xyes; then
                AC_DEFINE(AMD_QUADCORE_TUNE,[1],"Target for tuning mtxmq kernels")
                if test "x$MPICC" = x; then
                        echo "Choosing MPICC=cc for Cray XE"
                        MPICC=cc;
                fi
                if test "x$MPICXX" = x; then
                        echo "Choosing MPICXX=CC for Cray XE"
                        MPICXX=CC;
                fi
                echo "int main(){return 0;}" > __acml.cc
                CC __acml.cc -lacml >& /dev/null
                if test $? = 0; then
                        echo "AMD ACML library detected"
                        LIBS="$LIBS -lacml"
                        AC_DEFINE(HAVE_ACML,[1],[Define if AMD math library available - ACML])
                fi
                /bin/rm __acml.cc
                BIND="1 0 2"
                AC_DEFINE(USE_SPINLOCKS, [1], [Define if should use spinlocks])
        fi
])
m4trace:config/acx_crayxt.m4:1: -1- AC_DEFUN([ACX_CRAYXT], [
        # If on a Cray XT 
        #   - defines HAVE_CRAYXT=1 in headers 
        #   - defines HAVE_CRAYXT=yes in the script
        #   - sets MPICXX=CC and MPICC=cc if the user has not already set them
        #   - sets thread binding to "1 0 2"
        #   - enables spinlocks
        echo "int main()"       > __crayxt.cc
        echo "{"               >> __crayxt.cc
        echo "#ifdef __CRAYXT" >> __crayxt.cc
        echo "return 0;"       >> __crayxt.cc
        echo "#else"           >> __crayxt.cc
        echo "choke me"        >> __crayxt.cc
        echo "#endif"          >> __crayxt.cc
        echo "}"               >> __crayxt.cc
        CC __crayxt.cc >& /dev/null
        if test $? = 0; then
                echo "Cray XT detected"
                HAVE_CRAYXT=yes
                AC_DEFINE(HAVE_CRAYXT,[1],[Defined if we are running on an Cray XT])
        fi
        /bin/rm __crayxt.cc
        if test "x$HAVE_CRAYXT" = xyes; then
                AC_DEFINE(AMD_QUADCORE_TUNE,[1],"Target for tuning mtxmq kernels")
                if test "x$MPICC" = x; then
                        echo "Choosing MPICC=cc for Cray XT"
                        MPICC=cc;
                fi
                if test "x$MPICXX" = x; then
                        echo "Choosing MPICXX=CC for Cray XT"
                        MPICXX=CC;
                fi
                echo "int main(){return 0;}" > __acml.cc
                CC __acml.cc -lacml >& /dev/null
                if test $? = 0; then
                        echo "AMD ACML library detected"
                        LIBS="$LIBS -lacml"
                        AC_DEFINE(HAVE_ACML,[1],[Define if AMD math library available - ACML])
                fi
                /bin/rm __acml.cc
                BIND="1 0 2"
                AC_DEFINE(USE_SPINLOCKS, [1], [Define if should use spinlocks])
        fi
])
m4trace:config/acx_detect_cxx.m4:1: -1- AC_DEFUN([ACX_DETECT_CXX], [
    # Sets environment variable CXXVENDOR to one of
    # [GNU,Intel,Portland,Pathscale,IBM,unknown]
    AC_CACHE_CHECK([compiler vendor], [acx_cv_detect_cxx], [
      acx_cv_detect_cxx=unknown
      if test $acx_cv_detect_cxx = unknown; then
          $CXX --version 2>&1 | egrep -q "GCC|GNU|gcc|gnu|g\+\+|Free S"
          if test $? = 0; then
             acx_cv_detect_cxx=GNU
          fi
      fi
      if test $acx_cv_detect_cxx = unknown; then
          $CXX --version 2>&1 | egrep -q "clang"
          if test $? = 0; then
             acx_cv_detect_cxx=clang
          fi
      fi
      if test $acx_cv_detect_cxx = unknown; then
          $CXX --version 2>&1 | grep -q "Intel"
          if test $? = 0; then
             acx_cv_detect_cxx=Intel
          fi
      fi
      if test $acx_cv_detect_cxx = unknown; then
          $CXX --version 2>&1 | grep -q "Portland"
          if test $? = 0; then
             acx_cv_detect_cxx=Portland
          fi
      fi
      if test $acx_cv_detect_cxx = unknown; then
          $CXX -v 2>&1 | grep -q "Pathscale"
          if test $? = 0; then
             acx_cv_detect_cxx=Pathscale
          fi
      fi
      if test $acx_cv_detect_cxx = unknown; then
          $CXX -qversion 2>&1 | grep -q "IBM"
          if test $? = 0; then
             acx_cv_detect_cxx=IBM
          fi
      fi
    ])
    
    CXXVENDOR="$acx_cv_detect_cxx"
])
m4trace:config/acx_enable_cpp0xtr1.m4:1: -1- AC_DEFUN([ACX_ENABLE_CPP0XTR1], [
        # default is to use compiler support for either/both C++0x or TR1 headers
        # this is indicated by $enable_cpp0x=yes and $enable_cpptr1=yes
        #
        # other values mean disabled
        AC_ARG_ENABLE([cpp0x],  AS_HELP_STRING([--disable-cpp0x],  [Disable use of compiler support for C++0x (default is enabled or yes)]))
        AS_IF([test "x$enable_cpp0x" != "xno"], [enable_cpp0x="yes"])

        AC_ARG_ENABLE([cpptr1], AS_HELP_STRING([--disable-cpptr1], [Disable use of compiler provided TR1 headers (default is enabled or yes)]))
        AS_IF([test "x$enable_cpptr1" != "xno"], [enable_cpptr1="yes"])

        echo "enable_cpp0x=$enable_cpp0x  enable_cpptr1=$enable_cpptr1" 
])
m4trace:config/acx_enable_debugging.m4:4: -1- AC_DEFUN([ACX_ENABLE_DEBUGGING], [
  acx_enable_debugging="no"
  acx_enable_debugging_flags=""

  # Allow the user to enable or disable debugging flag
  AC_ARG_ENABLE([debugging],
    [AC_HELP_STRING([--enable-debugging@<:@=yes|no|LEVEL@:>@],
      [Enable debugging C and C++ compilers. You can also specify debug level (e.g. 3). @<:@default=no@:>@]) ],
    [
      case $enableval in
        yes)
          acx_enable_debugging="yes"
          acx_enable_debugging_flags="-g"
        ;;
        no)
        ;;
        *)
          acx_enable_debugging="yes"
          acx_enable_debugging_flags="-g$enableval"
        ;;
      esac
    ])

  # Test the flags and add them to flag variables if successful.
  if test $acx_enable_debugging != no; then
    ACX_CHECK_COMPILER_FLAG([C], [CFLAGS], [$acx_enable_debugging_flags],
      [CFLAGS="$CFLAGS $acx_enable_debugging_flags"],
      [AC_MSG_WARN([$CC does not accept $acx_enable_debugging_flags, no debugging flags will be used.])])
    ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_debugging_flags],
      [CXXFLAGS="$CXXFLAGS $acx_enable_debugging_flags"],
      [AC_MSG_WARN([$CXX does not accept $acx_enable_debugging_flags, no debugging flags will be used.])])
  fi
])
m4trace:config/acx_enable_optimal.m4:8: -1- AC_DEFUN([ACX_ENABLE_OPTIMAL], [
  acx_enable_optimal=""
  acx_enable_optimal_save_cxxflags="$CXXFLAGS"
  acx_enable_optimal_flags=""
  acx_enable_optimal_compiler="$CXXVENDOR"
  
  # Allow the user to enable or disable optimal flag
  AC_ARG_ENABLE([optimal],
    [AC_HELP_STRING([--enable-optimal@<:@=yes|no|GNU|clang|Pathscale|Portland|Intel|IBM@:>@],
      [Auto detect optimal CXXFLAGS for compiler and known systems.@<:@default=yes@:>@])],
    [
      case $enableval in
      yes)
        acx_enable_optimal="yes"
      ;;
      no)
        acx_enable_optimal="no"
      ;;
      *)
        acx_enable_optimal="yes"
        acx_enable_optimal_compiler="$enableval"
      esac
    ],
    [acx_enable_optimal="yes"]
  )

  # Set the flags for the specific compilers and systems
  if test $acx_enable_optimal != "no"; then
    AC_LANG_SAVE
    AC_LANG([C++])
    case $acx_enable_optimal_compiler in
      GNU)
        # Delete trailing -stuff from X.X.X-stuff then parse
        CXXVERSION=[`$CXX -dumpversion | sed -e 's/-.*//'`]
        CXXMAJOR=[`echo $CXXVERSION | sed -e 's/\.[.0-9a-zA-Z\-_]*//'`]
        CXXMINOR=[`echo $CXXVERSION | sed -e 's/[0-9]*\.//' -e 's/\.[0-9]*//'`]
        CXXMICRO=[`echo $CXXVERSION | sed -e 's/[0-9]*\.[0-9]*\.//'`]
        AC_MSG_NOTICE([Setting compiler flags for GNU C++ major=$CXXMAJOR minor=$CXXMINOR micro=$CXXMICRO])

        # Flags for all GCC variants
        acx_enable_optimal_flags="$acx_enable_optimal_flags -ffast-math"
        if test $enable_cpp0x = "yes"; then
          acx_enable_optimal_flags="$acx_enable_optimal_flags -std=c++0x"
        fi

        # Add GCC system specific flags
        if test "x$HAVE_CRAYXT" = xyes; then
          ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-march=barcelona],
            [acx_enable_optimal_flags="$acx_enable_optimal_flags -march=barcelona"])
        elif  test "x$HAVE_IBMBGP" = xyes; then
          acx_enable_optimal_flags=""
        else 
          ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-march=native],
            [acx_enable_optimal_flags="$acx_enable_optimal_flags -march=native"])
        fi

        # Add flags for Intel x86 architectures. 
        case $host_cpu in
          ??86*)
            acx_enable_optimal_flags="$acx_enable_optimal_flags -mfpmath=sse -msse -mpc64"
           ;;
        esac
      ;;
      
      clang)
        acx_enable_optimal_flags="$acx_enable_optimal_flags"
      ;;

      Pathscale)
        acx_enable_optimal_flags="$acx_enable_optimal_flags"
        if test "x$HAVE_CRAYXT" = xyes; then
          ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-march=barcelona],
            [acx_enable_optimal_flags="$acx_enable_optimal_flags -march=barcelona"])
        fi
      ;;

      Portland)
        acx_enable_optimal_flags="$acx_enable_optimal_flags -fastsse -Mflushz -Mcache_align -Drestrict=__restrict" 
        AC_MSG_NOTICE([Appending -pgf90libs to LIBS so can link against Fortran BLAS/linalg])
        LIBS="$LIBS -pgf90libs"
        if test "x$HAVE_CRAYXT" = xyes; then
          ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-tp barcelona-64],
            [acx_enable_optimal_flags="$acx_enable_optimal_flags -tp barcelona-64"])
        fi
      ;;

      Intel)
        acx_enable_optimal_flags="$acx_enable_optimal_flags -ip -no-prec-div -mkl -ansi"
        if test $enable_cpp0x = "yes"; then
          acx_enable_optimal_flags="$acx_enable_optimal_flags -std=c++0x"
        fi
#-use-intel-optimized-headers -fp-model fast=2 -inline-level=2
      ;;
      
      IBM)
        acx_enable_optimal_flags="$acx_enable_optimal_flags"
        if test "x$HAVE_IBMBGP" = xyes; then
          ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [ -qtune=450 -qarch=450d -qlanglvl=extended],
            [acx_enable_optimal_flags="$acx_enable_optimal_flags -qtune=450 -qarch=450d -qlanglvl=extended "])
        fi
      ;;
      
      *)
        AC_MSG_WARN([Optimal flags not set for $acx_enable_optimal_compile compiler])
      ;;
    esac

    # Test the flags and add them to flag variables if successful.
    ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_optimal_flags],
      [CXXFLAGS="$CXXFLAGS $acx_enable_optimal_flags"],
      [AC_MSG_WARN([$CXX does not accept $acx_enable_optimal_flags, no optimal flags will be used.])])
  fi

])
m4trace:config/acx_enable_optimization.m4:5: -1- AC_DEFUN([ACX_ENABLE_OPTIMIZATION], [
  # Specify the default optimization level for a given compiler. This value is
  # appended to "-O" in the flag variables.
  default_optimization=""
  case $CXXVENDOR in
    GNU)
      default_optimization="3"
    ;;
    clang)
      default_optimization="3"
    ;;
    Pathscale)
      default_optimization="fast"
    ;;
    Portland)
      default_optimization="3"
    ;;
    Intel)
      default_optimization="3"
    ;;
    IBM)
      default_optimization="3"
    ;;
    *)
      default_optimization="2"
    ;;
  esac

  acx_enable_optimization="yes"
  acx_enable_optimization_flags=""

  # Allow the user to enable or disable optimization flag
  AC_ARG_ENABLE([optimization],
    [AC_HELP_STRING([--enable-optimization@<:@=yes|no|OPTION@:>@],
      [Enable optimization for C and C++ (e.g. -O2) @<:@default=yes@:>@]) ],
    [
      case $enableval in
        yes)
          acx_enable_optimization_flags="-O$default_optimization"
        ;;
        no)
          acx_enable_optimization="no"
        ;;
        *)
          acx_enable_optimization_flags="-O$enableval"
        ;;
      esac
    ],
    [
      if test "x$acx_enable_debugging" == xno; then
        acx_enable_optimization_flags="-O$default_optimization"
      else
        acx_enable_optimization_flags="-O0"
        AC_MSG_WARN([Optimizations is disabled, because debugging is enabled. Add --enable-optimization to overide this behavior.])
      fi
    ]
  )

  # Test the flags and add them to flag variables if successful.
  if test $acx_enable_optimization != no; then
    ACX_CHECK_COMPILER_FLAG([C], [CFLAGS], [$acx_enable_optimization_flags],
      [CFLAGS="$CFLAGS $acx_enable_optimization_flags"],
      [AC_MSG_WARN([$CC does not accept $acx_enable_optimization_flags, no optimization flags will be used.])])
    ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_optimization_flags],
      [CXXFLAGS="$CXXFLAGS $acx_enable_optimization_flags"],
      [AC_MSG_WARN([$CXX does not accept $acx_enable_optimization_flags, no optimization flags will be used.])])
  fi

])
m4trace:config/acx_enable_warn.m4:5: -1- AC_DEFUN([ACX_ENABLE_WARN], [
  acx_enable_warn=""
  acx_enable_warn_flags=""
  acx_enable_warn_compiler="$CXXVENDOR"
  
  # Allow the user to enable or disable warnings
  AC_ARG_ENABLE([warning],
    [AC_HELP_STRING([--enable-warning@<:@=yes|no|GNU|clang|Pathscale|Portland|Intel|IBM@:>@],
      [Automatically set warnings for compiler.@<:@default=yes@:>@])],
    [
      case $enableval in
      yes)
        acx_enable_warn="yes"
      ;;
      no)
        acx_enable_warn="no"
      ;;
      *)
        acx_enable_warn="yes"
        acx_enable_warn_compiler="$enableval"
      esac
    ],
    [acx_enable_warn="yes"]
  )
  
  # Automatically specify the warning flags for known compilers. 
  if test $acx_enable_warn != "no"; then
    case $acx_enable_warn_compiler in
      GNU)
        acx_enable_warn_flags="-Wall -Wno-strict-aliasing -Wno-deprecated"
      ;;
      clang)
        acx_enable_warn_flags="-Wall"
      ;;
      Pathscale)
        acx_enable_warn_flags="-Wall"
      ;;
      Portland)
        acx_enable_warn_flags=""
      ;;
      Intel)
        acx_enable_warn_flags="-Wall -diag-disable remark,279,654,1125"
      ;;
      IBM)
        acx_enable_warn_flags="-qflag=w:w"
      ;;
      *)
        AC_MSG_WARN([Warning flags not set for $acx_enable_optimal_compile compiler])
      ;;
    esac

    # Test the flags and add them to flag variables if successful.
    ACX_CHECK_COMPILER_FLAG([C], [CFLAGS], [$acx_enable_warn_flags],
      [CFLAGS="$CFLAGS $acx_enable_warn_flags"],
      [AC_MSG_WARN([$CC does not accept $acx_enable_warn_flags, no warning flags will be used.])])
    ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_warn_flags],
      [CXXFLAGS="$CXXFLAGS $acx_enable_warn_flags"],
      [AC_MSG_WARN([$CXX does not accept $acx_enable_warn_flags, no warning flags will be used.])])
  fi
  

])
m4trace:config/acx_ibmbgp.m4:1: -1- AC_DEFUN([ACX_IBMBGP], [
        # If on an IBMBGP
        #   - defines HAVE_IBMBGP=1 in headers 
        #   - defines HAVE_IBMBGP=yes in the script
        #   - sets thread binding to "1 0 2"
        #   - enables spinlocks
        #   - sets the host architecture to powerpc-bgp-linux-gnu
        #
        #AC_CHECK_FILE([/bgsys], [HAVE_IBMBGP=yes AC_DEFINE([HAVE_IBMBGP],[1],[Defined if we are running on an IBM Blue Gene/P])],[])
        echo "int main()"       > __bgp__.cc
        echo "{"               >> __bgp__.cc
        echo "#ifdef __bgp__"  >> __bgp__.cc
        echo "return 0;"       >> __bgp__.cc
        echo "#else"           >> __bgp__.cc
        echo "choke me"        >> __bgp__.cc
        echo "#endif"          >> __bgp__.cc
        echo "}"               >> __bgp__.cc
        mpicxx __bgp__.cc >& /dev/null
        if test $? = 0; then
                HAVE_IBMBGP=yes
        fi
        /bin/rm __bgp__.cc 
        if test "x$HAVE_IBMBGP" = x; then
                mpicxx --version -c | grep -q bgp
                if test $? = 0; then
                        HAVE_IBMBGP=yes
                fi
        fi
        if test "x$HAVE_IBMBGP" = xyes; then
                echo "IBM Blue Gene/P detected"
                AC_DEFINE(HAVE_IBMBGP,[1],[Defined if we are running on an IBM Blue Gene/P])
                host="powerpc-bgp-linux"
                host_triplet="powerpc-bgp-linux"

                BIND="-1 -1 -1"
                AC_DEFINE(USE_SPINLOCKS, [1], [Define if should use spinlocks])
        fi
])
m4trace:config/acx_ibmbgq.m4:1: -1- AC_DEFUN([ACX_IBMBGQ], [
        # If on an IBMBGQ
        #   - defines HAVE_IBMBGQ=1 in headers 
        #   - defines HAVE_IBMBGQ=yes in the script
        #   - sets thread binding to "1 0 2"
        #   - enables spinlocks
        #   - sets the host architecture to powerpc-bgq-linux-gnu
        #
        #AC_CHECK_FILE([/bgsys], [HAVE_IBMBGQ=yes AC_DEFINE([HAVE_IBMBGQ],[1],[Defined if we are running on an IBM Blue Gene/Q])],[])
        echo "int main()"       > __bgq__.cc
        echo "{"               >> __bgq__.cc
        echo "#ifdef __bgq__"  >> __bgq__.cc
        echo "return 0;"       >> __bgq__.cc
        echo "#else"           >> __bgq__.cc
        echo "choke me"        >> __bgq__.cc
        echo "#endif"          >> __bgq__.cc
        echo "}"               >> __bgq__.cc
        mpicxx __bgq__.cc >& /dev/null
        if test $? = 0; then
                echo "IBM Blue Gene/Q detected"
                HAVE_IBMBGQ=yes
                AC_DEFINE(HAVE_IBMBGQ,[1],[Defined if we are running on an IBM Blue Gene/Q])
        fi
        /bin/rm __bgq__.cc
        if test "x$HAVE_IBMBGQ" = xyes; then
                host="powerpc64-bgq-linux"
                host_triplet="powerpc64-bgq-linux"

                BIND="-1 -1 -1"
                AC_DEFINE(USE_SPINLOCKS, [1], [Define if should use spinlocks])
        fi
])
m4trace:config/acx_mac.m4:1: -1- AC_DEFUN([ACX_MAC], [
        # If on a MAC
        #   - kiss steve jobs' ass
        #   - get an iphone
        #   - get another mac
        ON_A_MAC="no"
        uname -a | grep -iq Darwin
        if test $? = 0; then
            ITS_A_MAC="yes"
            ON_A_MAC="yes"
            echo "You are building on a mac ... I'll do it just this once since you asked nicely."
            AC_DEFINE(ON_A_MAC,[1],[Set if building on a mac])
        fi
])
m4trace:config/acx_mpi.m4:1: -1- AC_DEFUN([ACX_MPI], [
        # We were using the full macro from ACX but this forced AC_PROG_C or AC_PROG_CXX to 
        # be run before we had overridden the compilers which meant that some confdef.h
        # entries were incorrect (specifically std::exit problem with PGI)

        AC_ARG_VAR(MPICC,[MPI C compiler command])
        AC_CHECK_PROGS(MPICC, mpicc hcc mpcc mpcc_r mpxlc cmpicc, $CC)
        acx_mpi_save_CC="$CC"
        CC="$MPICC"
        AC_SUBST(MPICC)

        AC_ARG_VAR(MPICXX,[MPI C++ compiler command])
        AC_CHECK_PROGS(MPICXX, mpicxx mpic++ mpiCC mpCC hcp mpxlC mpxlC_r cmpic++, $CXX)
        acx_mpi_save_CXX="$CXX"
        CXX="$MPICXX"
        AC_SUBST(MPICXX)

        #AC_ARG_VAR(MPIF77,[MPI Fortran compiler command])
        #AC_CHECK_PROGS(MPIF77, mpif77 hf77 mpxlf mpf77 mpif90 mpf90 mpxlf90 mpxlf95 mpxlf_r cmpifc cmpif90c, $F77)
        #acx_mpi_save_F77="$F77"
        #F77="$MPIF77"
        #AC_SUBST(MPIF77)
])
m4trace:config/acx_posix_memalign.m4:1: -1- AC_DEFUN([ACX_POSIX_MEMALIGN], [
    AC_CHECK_FUNC([posix_memalign],[gotpm=1], [gotpm=0])
    if test $gotpm = 1; then
        AC_DEFINE([HAVE_POSIX_MEMALIGN], [1], [Set if have posix_memalign])
    elif test "$ON_A_MAC" = "yes"; then
        AC_DEFINE([HAVE_POSIX_MEMALIGN], [0], [Set if have posix_memalign])
    else
        AC_MSG_WARN([[   posix_memalign NOT FOUND ... enabling override of new/delete ... THIS WILL BE SLOW ]])
        AC_DEFINE([WORLD_GATHER_MEM_STATS], [1], [Set if MADNESS gathers memory statistics])
    fi

    # look for both version of posix_memalign, with and without throw()
    gotpmh=0
    if test $gotpm = 1; then
        AC_MSG_CHECKING([if missing declaration of posix_memalign in stdlib.h])
        AC_LANG_SAVE
        AC_LANG([C++])
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <stddef.h>
#include <stdlib.h>
extern "C"  int posix_memalign(void **memptr, size_t alignment, size_t size) throw();]],
[[void *m; posix_memalign(&m, 16, 1024);]])],
         [AC_MSG_RESULT([no])
          gotpmh=1
         ]
        )
        if test $gotpmh = 0; then
          AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <stddef.h>
#include <stdlib.h>
extern "C"  int posix_memalign(void **memptr, size_t alignment, size_t size);]],
[[void *m; posix_memalign(&m, 16, 1024);]])],
           [AC_MSG_RESULT([no])
            gotpmh=1
           ],
           [ AC_DEFINE(MISSING_POSIX_MEMALIGN_PROTO, [1], [Set if the posix_memalign prototype is missing]) 
             AC_MSG_RESULT([yes])
           ]
          )
        fi
        AC_LANG_RESTORE
    fi
])
m4trace:config/acx_std_abs.m4:1: -1- AC_DEFUN([ACX_STD_ABS], [
    AC_MSG_CHECKING([std::abs(long)])
    AC_LANG_PUSH([C++])
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <cmath>
#include <cstdlib>
long (*absptr)(long) = &std::abs; 
long a = -1;  
long b = std::abs(a);
]])],
                   [AC_DEFINE(HAVE_STD_ABS_LONG,[1],[Define if have std::abs(long)]) have_abs_long=yes],
                   [have_abs_long=no])
    AC_MSG_RESULT([$have_abs_long])
    if test X"$have_abs_long" = Xno; then
        AC_MSG_CHECKING([std::labs(long)])
        AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <cmath>
#include <cstdlib>
long (*labsptr)(long) = &std::labs; 
long a = -1l;  
long b = labs(a);
]])],
                       [AC_DEFINE(HAVE_LABS,[1],[Define if have std::labs(long)]) have_std_labs=yes],
                       [have_std_labs=no])
        AC_MSG_RESULT([$have_std_labs])
    fi
])
m4trace:config/acx_unqal_stat_decl.m4:1: -1- AC_DEFUN([ACX_UNQUALIFIED_STATIC_DECL], [
    AC_LANG_PUSH([C++])
    AC_MSG_CHECKING([if unqualified static declarations are considered])
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
        [[template <typename T>
          static inline void f(T* a) {};
          template <typename T> void g(T* a) { f(a); }
          template void g(int* a);]],
        [[]])],
      [AC_DEFINE(HAVE_UNQUALIFIED_STATIC_DECL, [1], [Set if compiler will instantiate static templates]) AC_MSG_RESULT([yes])],
      [AC_MSG_RESULT([no])])
    AC_LANG_POP([C++])
])
m4trace:config/acx_with_boost.m4:1: -1- AC_DEFUN([ACX_WITH_BOOST], [
  acx_with_boost=no
  AC_ARG_WITH([boost-include],
    [AS_HELP_STRING([--with-boost-include@<:@=DIR@:>@], [Build with Boost TR1 library.])],
    [
      case $withval in
      yes)
        acx_with_boost=yes
        if test "$CXXVENDOR" = Intel; then
          AC_MSG_ERROR([You must specify a path when using Boost with the Intel compiler.])
        fi
      ;;
      no)
        acx_with_boost=no
      ;;
      *)
        acx_with_boost=yes
        CPPFLAGS="-I$withval $CPPFLAGS"
        if test "$CXXVENDOR" = Intel; then
          CPPFLAGS="-I$withval/boost/tr1/tr1 $CPPFLAGS"
        fi
      ;;
      esac
    ])
  AC_ARG_WITH([boost],
    [AS_HELP_STRING([--with-boost@<:@=Install DIR@:>@], [Build with Boost TR1 library.])],
    [
      case $withval in
      yes)
        acx_with_boost=yes
        if test "$CXXVENDOR" = Intel; then
          AC_MSG_ERROR([You must specify a path when using Boost with the Intel compiler.])
        fi
      ;;
      no)
        if test "$acx_with_boost" != yes; then
          acx_with_boost=no
        fi
      ;;
      *)
        acx_with_boost=yes
        CPPFLAGS="-I$withval/include $CPPFLAGS"
        if test "$CXXVENDOR" = Intel; then
          CPPFLAGS="-I$withval/include/boost/tr1/tr1 $CPPFLAGS"
        fi
      ;;
      esac
    ]
  )
  
  if test "$acx_with_boost" != no; then
    # Check for the pressence of the Boost TR1 header files.
    AC_CHECK_HEADER([boost/tr1/memory.hpp], [],
      [AC_MSG_ERROR([Unable to find the Boost TR1 memory header file.])])
    AC_CHECK_HEADER([boost/make_shared.hpp],
      [AC_DEFINE([MADNESS_HAS_BOOST_MAKE_SHARED], [1], [Madness has Boost make_shared and allocate_shared available.])],
      [AC_MSG_ERROR([Unable to find the Boost make_shared / allocate header file.])])
    AC_CHECK_HEADER([boost/tr1/type_traits.hpp], [],
      [AC_MSG_ERROR([Unable to find the Boost TR1 type_traits header file.])])
    AC_CHECK_HEADER([boost/tr1/array.hpp], [],
      [AC_MSG_ERROR([Unable to find the Boost TR1 array header file.])])

    AC_DEFINE([MADNESS_HAS_BOOST_TR1], [1], 
      [Madness will use Boost.TR1 where the compiler lacks support for TR1.])
  fi
])
m4trace:config/acx_with_eigen3.m4:1: -1- AC_DEFUN([ACX_WITH_EIGEN3], [
  acx_with_eigen3=no
  AC_ARG_WITH([eigen3],
    [AS_HELP_STRING([--with-eigen3@<:@=DIR@:>@], [Build with Eigen3 headers.])],
    [
      case $withval in
      yes)
        acx_with_eigen3=yes
      ;;
      no)
        acx_with_eigen3=no
      ;;
      *)
        acx_with_eigen3=yes
        CPPFLAGS="-I$withval $CPPFLAGS"
      ;;
      esac
    ]
  )
  
  if test "$acx_with_eigen3" != no; then
    echo "Eigen3 option required"
    # Check for the pressence of Eigen3 header files.
    AC_CHECK_HEADER([Eigen/Dense], [],
      [AC_MSG_ERROR([Unable to find the Eigen/Dense header file.])])
    AC_DEFINE([MADNESS_HAS_EIGEN3], [1], 
      [Madness will use Eigen3 for linear algebra operations])
  fi
])
m4trace:config/acx_with_google_perf.m4:1: -1- AC_DEFUN([ACX_WITH_GOOGLE_PERF], [
  acx_with_google_perf=""
  AC_ARG_WITH([google-perf],
    [AS_HELP_STRING([--with-google-perf@<:@=Install DIR@:>@],
      [Enables use of Google fast malloc, profiler, and heap checker])],
    [
      case $withval in
      yes)
        acx_with_google_perf="yes"
      ;;
      no)
        acx_with_google_perf="no"
      ;;
      *)
        LIBS="$LIBS -L$withval/lib"
        acx_with_google_perf="$withval"
      esac
    ],
    [acx_with_google_perf="no"]
  )
  if test $acx_with_google_perf != "no"; then
    AC_LANG_SAVE
    AC_LANG([C++])
    if test $acx_with_libunwind != "no"; then
      AC_CHECK_LIB([tcmalloc], [malloc], [LIBS="$LIBS -ltcmalloc"], [AC_MSG_ERROR(["Unable to link with libtmalloc])])
      AC_DEFINE([MADNESS_HAS_GOOGLE_PERF], [1], [Define if using Google PerformanceTools])
    else
      AC_CHECK_LIB([tcmalloc], [malloc], [LIBS="$LIBS -ltcmalloc_minimal"], [AC_MSG_ERROR(["Unable to link with libtmalloc_minimal])])
      AC_DEFINE([MADNESS_HAS_GOOGLE_PERF_MINIMAL], [1], [Define if using Google PerformanceTools without libunwind])
    fi
    AC_LANG_RESTORE
  fi
])
m4trace:config/acx_with_google_test.m4:1: -1- AC_DEFUN([ACX_WITH_GOOGLE_TEST], [
  acx_with_google_test=""
  AC_ARG_WITH([google-test],
    [AS_HELP_STRING([--with-google-test@<:@=Install DIR@:>@],
      [Enables use of Google unit test])],
    [
      case $withval in
      yes)
        acx_with_google_test="yes"
      ;;
      no)
        acx_with_google_test="no"
      ;;
      *)
        GTEST_CPPFLAGS="-I$withval/include"
        GTEST_LDFLAGS="-L$withval/lib"
        GTEST_LIBS="-lgtest"
        acx_with_google_test="$withval"
      esac
    ],
    [acx_with_google_test="no"]
  )
  
  AC_ARG_VAR([GTEST_CPPFLAGS], [C-like preprocessor flags for Google Test.])
  AC_ARG_VAR([GTEST_CXXFLAGS], [C++ compile flags for Google Test.])
  AC_ARG_VAR([GTEST_LDFLAGS], [Linker path and option flags for Google Test.])
  AC_ARG_VAR([GTEST_LIBS], [Library linking flags for Google Test.])
           
  if test $acx_with_google_test != "no"; then
    AC_LANG_SAVE
    AC_LANG([C++])
    if test $acx_with_boost != "no"; then
      GTEST_CPPFLAGS="$GTEST_CPPFLAGS -DGTEST_HAS_TR1_TUPLE=0 -DGTEST_USE_OWN_TR1_TUPLE=1"
    fi
    
    # Save and set compile flags for checks
    acx_with_google_test_cppflags_save=$CPPFLAGS
    acx_with_google_test_cxxflags_save=$CXXFLAGS
    acx_with_google_test_ldflags_save=$LDFLAGS
    acx_with_google_test_libs_save=$LIBS
    CPPFLAGS="$CPPFLAGS $GTEST_CPPFLAGS"
    CXXFLAGS="$CXXFLAGS $GTEST_CXXFLAGS"
    LDFLAGS="$LDFLAGS $GTEST_LDFLAGS"
    LIBS="$LIBS $GTEST_LIBS"
    
    # Check for gtest header
    AC_CHECK_HEADER([gtest/gtest.h], [], [AC_MSG_ERROR([Unable to compile with Google Test.])])
    
    # Check for gtest library
    AC_MSG_CHECKING([for ::testing::InitGoogleTest in -lgtest])
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
        [[namespace testing { void InitGoogleTest(int*,char**); }]],
        [[int i = 0; char** c = 0; ::testing::InitGoogleTest(&i,c);]])
      ],
      [AC_MSG_RESULT([yes])],
      [AC_MSG_RESULT([no])
       AC_MSG_ERROR(["Unable to link with libgtest])])

    # Restore the original flags
    CPPFLAGS=$acx_with_google_test_cppflags_save
    CXXFLAGS=$acx_with_google_test_cxxflags_save
    LDFLAGS=$acx_with_google_test_ldflags_save
    LIBS=$acx_with_google_test_libs_save

    # Set preprocessor and build variables
    AC_DEFINE([MADNESS_HAS_GOOGLE_TEST], [1], [Define if should use Google unit testing])
    AC_SUBST([GTEST_CPPFLAGS])
    AC_SUBST([GTEST_CXXFLAGS])
    AC_SUBST([GTEST_LDFLAGS])
    AC_SUBST([GTEST_LIBS])

    AC_LANG_RESTORE
  fi
])
m4trace:config/acx_with_libunwind.m4:1: -1- AC_DEFUN([ACX_WITH_LIBUNWIND], [
  acx_with_libunwind=""
  AC_ARG_WITH([libunwind],
    [AS_HELP_STRING([--with-libunwind@<:@=Install DIR@:>@],
      [Enables use of libunwind, required for Google profiler and heap checker])],
    [
      case $withval in
      yes)
        acx_with_libunwind="yes"
      ;;
      no)
        acx_with_libunwind="no"
      ;;
      *)
        CPPFLAGS="$CPPFLAGS -I$with_libunwind/include"
        LIBS="$LIBS -L$with_libunwind/lib"
        acx_with_libunwind="$withval"
      esac
    ],
    [acx_with_libunwind="no"]
  )
  if test $acx_with_libunwind != "no"; then
    AC_LANG_SAVE
    AC_LANG_C
    AC_CHECK_HEADER([libunwind.h], [], [AC_MSG_ERROR([Unable to compile with the libunwind.])])
    AC_CHECK_LIB([unwind], [_Unwind_GetRegionStart], [LIBS="$LIBS -lunwind"], [AC_MSG_ERROR(["Unable to link with libunwind])])
    AC_DEFINE(MADNESS_HAS_LIBUNWIND, [1], [Define if should use libunwind for Google performance tools])
    AC_LANG_RESTORE
  fi
])
m4trace:config/acx_with_libxc.m4:1: -1- AC_DEFUN([ACX_WITH_LIBXC], [
  acx_with_libxc=""
  AC_ARG_WITH([libxc],
    [AS_HELP_STRING([--with-libxc@<:@=Install DIR@:>@],
      [Enables use of the libxc library of density functionals])],
    [
      case $withval in
      yes)
        acx_with_libxc="yes"
      ;;
      no)
        acx_with_libxc="no"
      ;;
      *)
        CPPFLAGS="-I$withval/include $CPPFLAGS"
        LIBS="$LIBS -L$withval/lib"
        acx_with_libxc="$withval"
      esac
    ],
    [acx_with_libxc="no"]
  )
  if test $acx_with_libxc != "no"; then
    AC_LANG_SAVE
    AC_LANG([C++])
    AC_CHECK_LIB([xc], [xc_func_end], [LIBS="$LIBS -lxc"], [AC_MSG_ERROR(["Unable to link with libxc])])
    AC_DEFINE([MADNESS_HAS_LIBXC], [1], [Define if using libxc])
    AC_LANG_RESTORE
  fi
])
m4trace:config/acx_with_stubmpi.m4:1: -1- AC_DEFUN([ACX_WITH_STUBMPI], [
  acx_with_stubmpi=no
  AC_ARG_WITH([stubmpi],
    [AS_HELP_STRING([--with-stubmpi], [Build without MPI ... i.e., stubbing it out.])],
    [
      case $withval in
      yes)
        acx_with_stubmpi=yes
      ;;
      no)
        acx_with_stubmpi=no
      ;;
      *)
        acx_with_stubmpi=yes
      ;;
      esac
    ])
    if test $acx_with_stubmpi = yes; then
        AC_DEFINE(STUBOUTMPI,[1],[If defined header disable MPI by including stubmpi.h])
        MPICC="$CC"
	MPICXX="$CXX"
        if test "x$CC" = x; then
           MPICC=gcc;
        fi
        if test "x$CXX" = x; then
           MPICXX=g++;
        fi
        echo "Stubbing out MPI with MPICXX=$MPICXX MPICC=$MPICC"
    fi
])
m4trace:configure.ac:4: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:4: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:4: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:4: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:4: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:4: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:4: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:4: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:14: -1- AM_INIT_AUTOMAKE([-Wall -Werror nostdinc foreign])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:14: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:14: -1- AM_AUTOMAKE_VERSION([1.11.1])
m4trace:configure.ac:14: -1- _AM_AUTOCONF_VERSION([2.63])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:14: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:14: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:14: -1- _AM_SET_OPTIONS([-Wall -Werror nostdinc foreign])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([-Wall])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([-Wall])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([-Werror])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([-Werror])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([nostdinc])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([nostdinc])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:14: -1- AM_SANITY_CHECK
m4trace:configure.ac:14: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:14: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:14: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:14: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:14: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:14: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:14: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:14: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:14: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:14: -1- AM_PROG_MKDIR_P
m4trace:configure.ac:14: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:14: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:14: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AMTAR], [tar])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:20: -1- ACX_CRAYXT
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_CRAYXT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AMD_QUADCORE_TUNE$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_ACML$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^USE_SPINLOCKS$])
m4trace:configure.ac:21: -1- ACX_CRAYXE
m4trace:configure.ac:21: -1- m4_pattern_allow([^HAVE_CRAYXE$])
m4trace:configure.ac:21: -1- m4_pattern_allow([^AMD_QUADCORE_TUNE$])
m4trace:configure.ac:21: -1- m4_pattern_allow([^HAVE_ACML$])
m4trace:configure.ac:21: -1- m4_pattern_allow([^USE_SPINLOCKS$])
m4trace:configure.ac:22: -1- ACX_MAC
m4trace:configure.ac:22: -1- m4_pattern_allow([^ON_A_MAC$])
m4trace:configure.ac:23: -1- ACX_IBMBGP
m4trace:configure.ac:23: -1- m4_pattern_allow([^HAVE_IBMBGP$])
m4trace:configure.ac:23: -1- m4_pattern_allow([^USE_SPINLOCKS$])
m4trace:configure.ac:24: -1- ACX_IBMBGQ
m4trace:configure.ac:24: -1- m4_pattern_allow([^HAVE_IBMBGQ$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^USE_SPINLOCKS$])
m4trace:configure.ac:26: -1- ACX_WITH_STUBMPI
m4trace:configure.ac:26: -1- m4_pattern_allow([^STUBOUTMPI$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^MAD_BIND_DEFAULT$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:34: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^HOST_CPU$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^HOST_SYSTEM$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^X86_64$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^X86_32$])
m4trace:configure.ac:54: -1- AM_CONDITIONAL([USE_X86_64_ASM], [test $use_x86_64_asm = yes])
m4trace:configure.ac:54: -1- m4_pattern_allow([^USE_X86_64_ASM_TRUE$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^USE_X86_64_ASM_FALSE$])
m4trace:configure.ac:54: -1- _AM_SUBST_NOTMAKE([USE_X86_64_ASM_TRUE])
m4trace:configure.ac:54: -1- _AM_SUBST_NOTMAKE([USE_X86_64_ASM_FALSE])
m4trace:configure.ac:55: -1- AM_CONDITIONAL([USE_X86_32_ASM], [test $use_x86_32_asm = yes])
m4trace:configure.ac:55: -1- m4_pattern_allow([^USE_X86_32_ASM_TRUE$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^USE_X86_32_ASM_FALSE$])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([USE_X86_32_ASM_TRUE])
m4trace:configure.ac:55: -1- _AM_SUBST_NOTMAKE([USE_X86_32_ASM_FALSE])
m4trace:configure.ac:58: -1- ACX_MPI
m4trace:configure.ac:58: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^MPICC$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^MPICXX$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:63: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:63: -1- AM_SET_DEPDIR
m4trace:configure.ac:63: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:63: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:63: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:63: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:63: -1- AM_DEP_TRACK
m4trace:configure.ac:63: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:63: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:63: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:63: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:63: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:63: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:63: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:64: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:64: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:64: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:64: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:64: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:64: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:65: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:65: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:65: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:65: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:65: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:65: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:66: -1- _m4_warn([obsolete], [The macro `AC_LANG_CPLUSPLUS' is obsolete.
You should run autoupdate.], [../../lib/autoconf/c.m4:128: AC_LANG_CPLUSPLUS is expanded from...
configure.ac:66: the top level])
m4trace:configure.ac:72: -1- ACX_DETECT_CXX
m4trace:configure.ac:75: -1- ACX_ENABLE_DEBUGGING
m4trace:configure.ac:75: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
config/acx_enable_debugging.m4:4: ACX_ENABLE_DEBUGGING is expanded from...
configure.ac:75: the top level])
m4trace:configure.ac:75: -1- ACX_CHECK_COMPILER_FLAG([C], [CFLAGS], [$acx_enable_debugging_flags], [CFLAGS="$CFLAGS $acx_enable_debugging_flags"], [AC_MSG_WARN([$CC does not accept $acx_enable_debugging_flags, no debugging flags will be used.])])
m4trace:configure.ac:75: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_debugging.m4:4: ACX_ENABLE_DEBUGGING is expanded from...
configure.ac:75: the top level])
m4trace:configure.ac:75: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_debugging.m4:4: ACX_ENABLE_DEBUGGING is expanded from...
configure.ac:75: the top level])
m4trace:configure.ac:75: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_debugging_flags], [CXXFLAGS="$CXXFLAGS $acx_enable_debugging_flags"], [AC_MSG_WARN([$CXX does not accept $acx_enable_debugging_flags, no debugging flags will be used.])])
m4trace:configure.ac:75: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_debugging.m4:4: ACX_ENABLE_DEBUGGING is expanded from...
configure.ac:75: the top level])
m4trace:configure.ac:75: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_debugging.m4:4: ACX_ENABLE_DEBUGGING is expanded from...
configure.ac:75: the top level])
m4trace:configure.ac:78: -1- ACX_ENABLE_OPTIMIZATION
m4trace:configure.ac:78: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
config/acx_enable_optimization.m4:5: ACX_ENABLE_OPTIMIZATION is expanded from...
configure.ac:78: the top level])
m4trace:configure.ac:78: -1- ACX_CHECK_COMPILER_FLAG([C], [CFLAGS], [$acx_enable_optimization_flags], [CFLAGS="$CFLAGS $acx_enable_optimization_flags"], [AC_MSG_WARN([$CC does not accept $acx_enable_optimization_flags, no optimization flags will be used.])])
m4trace:configure.ac:78: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimization.m4:5: ACX_ENABLE_OPTIMIZATION is expanded from...
configure.ac:78: the top level])
m4trace:configure.ac:78: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimization.m4:5: ACX_ENABLE_OPTIMIZATION is expanded from...
configure.ac:78: the top level])
m4trace:configure.ac:78: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_optimization_flags], [CXXFLAGS="$CXXFLAGS $acx_enable_optimization_flags"], [AC_MSG_WARN([$CXX does not accept $acx_enable_optimization_flags, no optimization flags will be used.])])
m4trace:configure.ac:78: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimization.m4:5: ACX_ENABLE_OPTIMIZATION is expanded from...
configure.ac:78: the top level])
m4trace:configure.ac:78: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimization.m4:5: ACX_ENABLE_OPTIMIZATION is expanded from...
configure.ac:78: the top level])
m4trace:configure.ac:81: -1- ACX_ENABLE_WARN
m4trace:configure.ac:81: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
config/acx_enable_warn.m4:5: ACX_ENABLE_WARN is expanded from...
configure.ac:81: the top level])
m4trace:configure.ac:81: -1- ACX_CHECK_COMPILER_FLAG([C], [CFLAGS], [$acx_enable_warn_flags], [CFLAGS="$CFLAGS $acx_enable_warn_flags"], [AC_MSG_WARN([$CC does not accept $acx_enable_warn_flags, no warning flags will be used.])])
m4trace:configure.ac:81: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_warn.m4:5: ACX_ENABLE_WARN is expanded from...
configure.ac:81: the top level])
m4trace:configure.ac:81: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_warn.m4:5: ACX_ENABLE_WARN is expanded from...
configure.ac:81: the top level])
m4trace:configure.ac:81: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_warn_flags], [CXXFLAGS="$CXXFLAGS $acx_enable_warn_flags"], [AC_MSG_WARN([$CXX does not accept $acx_enable_warn_flags, no warning flags will be used.])])
m4trace:configure.ac:81: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_warn.m4:5: ACX_ENABLE_WARN is expanded from...
configure.ac:81: the top level])
m4trace:configure.ac:81: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_warn.m4:5: ACX_ENABLE_WARN is expanded from...
configure.ac:81: the top level])
m4trace:configure.ac:84: -1- ACX_ENABLE_CPP0XTR1
m4trace:configure.ac:87: -1- ACX_ENABLE_OPTIMAL
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-march=barcelona], [acx_enable_optimal_flags="$acx_enable_optimal_flags -march=barcelona"])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-march=native], [acx_enable_optimal_flags="$acx_enable_optimal_flags -march=native"])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-march=barcelona], [acx_enable_optimal_flags="$acx_enable_optimal_flags -march=barcelona"])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [-tp barcelona-64], [acx_enable_optimal_flags="$acx_enable_optimal_flags -tp barcelona-64"])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [ -qtune=450 -qarch=450d -qlanglvl=extended], [acx_enable_optimal_flags="$acx_enable_optimal_flags -qtune=450 -qarch=450d -qlanglvl=extended "])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- ACX_CHECK_COMPILER_FLAG([C++], [CXXFLAGS], [$acx_enable_optimal_flags], [CXXFLAGS="$CXXFLAGS $acx_enable_optimal_flags"], [AC_MSG_WARN([$CXX does not accept $acx_enable_optimal_flags, no optimal flags will be used.])])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:87: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_compiler_flags.m4:2: ACX_CHECK_COMPILER_FLAG is expanded from...
config/acx_enable_optimal.m4:8: ACX_ENABLE_OPTIMAL is expanded from...
configure.ac:87: the top level])
m4trace:configure.ac:90: -1- ACX_WITH_BOOST
m4trace:configure.ac:90: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^MADNESS_HAS_BOOST_MAKE_SHARED$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^MADNESS_HAS_BOOST_TR1$])
m4trace:configure.ac:91: -1- ACX_CHECK_TR1
m4trace:configure.ac:91: -1- ACX_CHECK_SHARED_PTR
m4trace:configure.ac:91: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_tr1.m4:1: ACX_CHECK_SHARED_PTR is expanded from...
config/acx_check_tr1.m4:459: ACX_CHECK_TR1 is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_MEMORY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_SHARED_PTR$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_MEMORY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_SHARED_PTR$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_TR1_MEMORY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_SHARED_PTR$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_BOOST_TR1_MEMORY_HPP$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_SHARED_PTR$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_MAKE_SHARED$])
m4trace:configure.ac:91: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_tr1.m4:1: ACX_CHECK_SHARED_PTR is expanded from...
config/acx_check_tr1.m4:459: ACX_CHECK_TR1 is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:91: -1- ACX_CHECK_TYPE_TRAITS
m4trace:configure.ac:91: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_tr1.m4:98: ACX_CHECK_TYPE_TRAITS is expanded from...
config/acx_check_tr1.m4:459: ACX_CHECK_TR1 is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_TR1_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_BOOST_TR1_TYPE_TRAITS_HPP$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_TYPE_TRAITS$])
m4trace:configure.ac:91: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_tr1.m4:98: ACX_CHECK_TYPE_TRAITS is expanded from...
config/acx_check_tr1.m4:459: ACX_CHECK_TR1 is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:91: -1- ACX_CHECK_ARRAY
m4trace:configure.ac:91: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_check_tr1.m4:171: ACX_CHECK_ARRAY is expanded from...
config/acx_check_tr1.m4:459: ACX_CHECK_TR1 is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_ARRAY_HAS_FILL$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_ARRAY_HAS_FILL$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_TR1_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_ARRAY_HAS_FILL$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_USE_BOOST_TR1_ARRAY_HPP$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_HAS_STD_TR1_ARRAY$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^MADNESS_ARRAY_HAS_FILL$])
m4trace:configure.ac:91: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_check_tr1.m4:171: ACX_CHECK_ARRAY is expanded from...
config/acx_check_tr1.m4:459: ACX_CHECK_TR1 is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:94: -1- ACX_WITH_LIBUNWIND
m4trace:configure.ac:94: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_with_libunwind.m4:1: ACX_WITH_LIBUNWIND is expanded from...
configure.ac:94: the top level])
m4trace:configure.ac:94: -1- _m4_warn([obsolete], [The macro `AC_LANG_C' is obsolete.
You should run autoupdate.], [../../lib/autoconf/c.m4:95: AC_LANG_C is expanded from...
config/acx_with_libunwind.m4:1: ACX_WITH_LIBUNWIND is expanded from...
configure.ac:94: the top level])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^MADNESS_HAS_LIBUNWIND$])
m4trace:configure.ac:94: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_with_libunwind.m4:1: ACX_WITH_LIBUNWIND is expanded from...
configure.ac:94: the top level])
m4trace:configure.ac:95: -1- ACX_WITH_GOOGLE_PERF
m4trace:configure.ac:95: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_with_google_perf.m4:1: ACX_WITH_GOOGLE_PERF is expanded from...
configure.ac:95: the top level])
m4trace:configure.ac:95: -1- m4_pattern_allow([^MADNESS_HAS_GOOGLE_PERF$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^MADNESS_HAS_GOOGLE_PERF_MINIMAL$])
m4trace:configure.ac:95: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_with_google_perf.m4:1: ACX_WITH_GOOGLE_PERF is expanded from...
configure.ac:95: the top level])
m4trace:configure.ac:96: -1- ACX_WITH_GOOGLE_TEST
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_CPPFLAGS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_CXXFLAGS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_LDFLAGS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_LIBS$])
m4trace:configure.ac:96: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_with_google_test.m4:1: ACX_WITH_GOOGLE_TEST is expanded from...
configure.ac:96: the top level])
m4trace:configure.ac:96: -1- m4_pattern_allow([^MADNESS_HAS_GOOGLE_TEST$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_CPPFLAGS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_CXXFLAGS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_LDFLAGS$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^GTEST_LIBS$])
m4trace:configure.ac:96: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_with_google_test.m4:1: ACX_WITH_GOOGLE_TEST is expanded from...
configure.ac:96: the top level])
m4trace:configure.ac:97: -1- ACX_WITH_LIBXC
m4trace:configure.ac:97: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_with_libxc.m4:1: ACX_WITH_LIBXC is expanded from...
configure.ac:97: the top level])
m4trace:configure.ac:97: -1- m4_pattern_allow([^MADNESS_HAS_LIBXC$])
m4trace:configure.ac:97: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_with_libxc.m4:1: ACX_WITH_LIBXC is expanded from...
configure.ac:97: the top level])
m4trace:configure.ac:100: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:101: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:101: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:101: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:103: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:104: -1- AM_PROG_AS
m4trace:configure.ac:104: -1- m4_pattern_allow([^CCAS$])
m4trace:configure.ac:104: -1- m4_pattern_allow([^CCASFLAGS$])
m4trace:configure.ac:104: -1- _AM_IF_OPTION([no-dependencies], [], [_AM_DEPENDENCIES([CCAS])])
m4trace:configure.ac:104: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:104: -1- _AM_DEPENDENCIES([CCAS])
m4trace:configure.ac:104: -1- m4_pattern_allow([^CCASDEPMODE$])
m4trace:configure.ac:104: -1- AM_CONDITIONAL([am__fastdepCCAS], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:104: -1- m4_pattern_allow([^am__fastdepCCAS_TRUE$])
m4trace:configure.ac:104: -1- m4_pattern_allow([^am__fastdepCCAS_FALSE$])
m4trace:configure.ac:104: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_TRUE])
m4trace:configure.ac:104: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_FALSE])
m4trace:configure.ac:106: -1- m4_pattern_allow([^HAVE_SED$])
m4trace:configure.ac:108: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:112: -1- m4_pattern_allow([^HAVE_DOXYGEN$])
m4trace:configure.ac:114: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:116: -1- m4_pattern_allow([^HAVE_DOT$])
m4trace:configure.ac:118: -1- m4_pattern_allow([^DOT$])
m4trace:configure.ac:120: -1- m4_pattern_allow([^HAVE_PDFLATEX$])
m4trace:configure.ac:122: -1- m4_pattern_allow([^PDFLATEX$])
m4trace:configure.ac:124: -1- m4_pattern_allow([^HAVE_LATEX$])
m4trace:configure.ac:126: -1- m4_pattern_allow([^LATEX$])
m4trace:configure.ac:128: -1- AM_CONDITIONAL([CAN_BUILD_DOC], [test $HAVE_DOXYGEN = YES])
m4trace:configure.ac:128: -1- m4_pattern_allow([^CAN_BUILD_DOC_TRUE$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^CAN_BUILD_DOC_FALSE$])
m4trace:configure.ac:128: -1- _AM_SUBST_NOTMAKE([CAN_BUILD_DOC_TRUE])
m4trace:configure.ac:128: -1- _AM_SUBST_NOTMAKE([CAN_BUILD_DOC_FALSE])
m4trace:configure.ac:130: -1- m4_pattern_allow([^TIME_WITH_SYS_TIME$])
m4trace:configure.ac:131: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^HAVE_STDBOOL_H$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:140: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:140: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:141: -1- ACX_CHECK_TLS
m4trace:configure.ac:141: -1- m4_pattern_allow([^thread_local$])
m4trace:configure.ac:141: -1- m4_pattern_allow([^thread_local$])
m4trace:configure.ac:142: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^TIME_WITH_SYS_TIME$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^HAVE_UINT64_T$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^HAVE_INT64_T$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^HAVE_UINT32_T$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^HAVE_INT32_T$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^HAVE_UINT16_T$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^HAVE_UINT8_T$])
m4trace:configure.ac:147: -1- m4_pattern_allow([^volatile$])
m4trace:configure.ac:148: -1- m4_pattern_allow([^const$])
m4trace:configure.ac:150: -1- m4_pattern_allow([^HAVE_PTRDIFF_T$])
m4trace:configure.ac:154: -1- m4_pattern_allow([^HAVE_WORKING_VFORK$])
m4trace:configure.ac:154: -1- m4_pattern_allow([^vfork$])
m4trace:configure.ac:154: -1- m4_pattern_allow([^HAVE_WORKING_FORK$])
m4trace:configure.ac:157: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:158: -1- ACX_POSIX_MEMALIGN
m4trace:configure.ac:158: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:158: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:158: -1- m4_pattern_allow([^WORLD_GATHER_MEM_STATS$])
m4trace:configure.ac:158: -1- _m4_warn([obsolete], [The macro `AC_LANG_SAVE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:148: AC_LANG_SAVE is expanded from...
config/acx_posix_memalign.m4:1: ACX_POSIX_MEMALIGN is expanded from...
configure.ac:158: the top level])
m4trace:configure.ac:158: -1- m4_pattern_allow([^MISSING_POSIX_MEMALIGN_PROTO$])
m4trace:configure.ac:158: -1- _m4_warn([obsolete], [The macro `AC_LANG_RESTORE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/lang.m4:157: AC_LANG_RESTORE is expanded from...
config/acx_posix_memalign.m4:1: ACX_POSIX_MEMALIGN is expanded from...
configure.ac:158: the top level])
m4trace:configure.ac:161: -1- ACX_WITH_EIGEN3
m4trace:configure.ac:161: -1- m4_pattern_allow([^MADNESS_HAS_EIGEN3$])
m4trace:configure.ac:167: -1- ACX_UNQUALIFIED_STATIC_DECL
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_UNQUALIFIED_STATIC_DECL$])
m4trace:configure.ac:168: -1- ACX_STD_ABS
m4trace:configure.ac:168: -1- m4_pattern_allow([^HAVE_STD_ABS_LONG$])
m4trace:configure.ac:168: -1- m4_pattern_allow([^HAVE_LABS$])
m4trace:configure.ac:171: -1- m4_pattern_allow([^XTERM$])
m4trace:configure.ac:173: -1- m4_pattern_allow([^HAVE_XTERM$])
m4trace:configure.ac:177: -1- m4_pattern_allow([^GDB$])
m4trace:configure.ac:179: -1- m4_pattern_allow([^HAVE_GDB$])
m4trace:configure.ac:183: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:183: the top level])
m4trace:configure.ac:191: -1- m4_pattern_allow([^MADNESS_ASSERTIONS_ABORT$])
m4trace:configure.ac:195: -1- m4_pattern_allow([^MADNESS_ASSERTIONS_ASSERT$])
m4trace:configure.ac:199: -1- m4_pattern_allow([^MADNESS_ASSERTIONS_DISABLE$])
m4trace:configure.ac:203: -1- m4_pattern_allow([^MADNESS_ASSERTIONS_THROW$])
m4trace:configure.ac:208: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:208: the top level])
m4trace:configure.ac:214: -1- m4_pattern_allow([^WORLD_GATHER_MEM_STATS$])
m4trace:configure.ac:217: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:217: the top level])
m4trace:configure.ac:217: -1- m4_pattern_allow([^WORLD_PROFILE_ENABLE$])
m4trace:configure.ac:222: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:222: the top level])
m4trace:configure.ac:222: -1- m4_pattern_allow([^TENSOR_BOUNDS_CHECKING$])
m4trace:configure.ac:228: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:228: the top level])
m4trace:configure.ac:228: -1- m4_pattern_allow([^TENSOR_INSTANCE_COUNT$])
m4trace:configure.ac:234: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:234: the top level])
m4trace:configure.ac:234: -1- m4_pattern_allow([^USE_SPINLOCKS$])
m4trace:configure.ac:240: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:240: the top level])
m4trace:configure.ac:240: -1- m4_pattern_allow([^NEVER_SPIN$])
m4trace:configure.ac:246: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1443: AC_ARG_WITH is expanded from...
configure.ac:246: the top level])
m4trace:configure.ac:246: -1- m4_pattern_allow([^HAVE_PAPI$])
m4trace:configure.ac:252: -1- m4_pattern_allow([^MADNESS_CONFIGURATION_USER$])
m4trace:configure.ac:253: -1- m4_pattern_allow([^MADNESS_CONFIGURATION_DATE$])
m4trace:configure.ac:254: -1- m4_pattern_allow([^MADNESS_CONFIGURATION_CXX$])
m4trace:configure.ac:255: -1- m4_pattern_allow([^MADNESS_CONFIGURATION_CXXFLAGS$])
m4trace:configure.ac:256: -1- m4_pattern_allow([^MADNESS_CONFIGURATION_HOST$])
m4trace:configure.ac:259: -1- m4_pattern_allow([^WORLD_WATCHDOG$])
m4trace:configure.ac:260: -1- m4_pattern_allow([^WATCHDOG_BARK_INTERVAL$])
m4trace:configure.ac:261: -1- m4_pattern_allow([^WATCHDOG_TIMEOUT$])
m4trace:configure.ac:262: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
configure.ac:262: the top level])
m4trace:configure.ac:262: -1- m4_pattern_allow([^MADNESS_USE_BSEND_ACKS$])
m4trace:configure.ac:262: -1- m4_pattern_allow([^MADNESS_USE_BSEND_ACKS$])
m4trace:configure.ac:272: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1443: AC_ARG_WITH is expanded from...
configure.ac:272: the top level])
m4trace:configure.ac:272: -1- m4_pattern_allow([^MADNESS_FORINT$])
m4trace:configure.ac:272: -1- m4_pattern_allow([^MADNESS_FORINT$])
m4trace:configure.ac:272: -1- m4_pattern_allow([^MADNESS_FORINT$])
m4trace:configure.ac:272: -1- m4_pattern_allow([^MADNESS_FORINT$])
m4trace:configure.ac:320: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:320: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:320: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:320: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:320: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:320: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:320: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:320: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:320: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
